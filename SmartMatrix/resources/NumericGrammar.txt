PROGRAM (0) ->DECLARE_FUNC (1) FUNCTION (2) 
DECLARE_FUNC (3) ->SIMPLETYPE (6) identifier (7) ( (8) LISTPARAM (9) ) (10) ; (11) DECLARE_FUNC (12) 
DECLARE_FUNC (4) ->matrix (13) identifier (14) ( (15) LISTPARAM (16) ) (17) ; (18) DECLARE_FUNC (19) 
DECLARE_FUNC (5) ->void (20) DECLARE_AFTER_VOID (21) 
DECLARE_AFTER_VOID (22) ->identifier (24) ( (25) LISTPARAM (26) ) (27) ; (28) DECLARE_FUNC (29) 
DECLARE_AFTER_VOID (23) ->MAIN (30) 
TYPE (31) ->SIMPLETYPE (33) 
TYPE (32) ->void (34) 
SIMPLETYPE (35) ->double (39) 
SIMPLETYPE (36) ->integer (40) 
SIMPLETYPE (37) ->string (41) 
SIMPLETYPE (38) ->bool (42) 
MAIN (43) ->main (44) ( (45) ) (46) { (47) CODE (48) } (49) 
FUNCTION (50) ->TYPE (52) identifier (53) ( (54) LISTPARAM (55) ) (56) { (57) CODE (58) } (59) FUNCTION (60) 
FUNCTION (51) ->matrix (61) identifier (62) ( (63) LISTPARAM (64) ) (65) { (66) CODE (67) } (68) FUNCTION (69) 
LISTPARAM (70) ->TYPE_PARAM (72) identifier (73) NEXT_PARAM (74) 
LISTPARAM (71) ->eps (75) 
TYPE_PARAM (76) ->SIMPLETYPE (78) 
TYPE_PARAM (77) ->matrix (79) 
NEXT_PARAM (80) ->, (82) TYPE_PARAM (83) identifier (84) NEXT_PARAM (85) 
NEXT_PARAM (81) ->eps (86) 
CODE (87) ->identifier (93) CONTEXT_IDENTIFIER (94) ; (95) CODE (96) 
CODE (88) ->IF (97) CODE (98) 
CODE (89) ->FOR (99) CODE (100) 
CODE (90) ->OPERATION_ASIGN (101) ; (102) CODE (103) 
CODE (91) ->return (104) VALUE (105) ; (106) CODE (107) 
CODE (92) ->eps (108) 
CONTEXT_IDENTIFIER (109) ->ASSIGN_ELEM_MATR (112) 
CONTEXT_IDENTIFIER (110) ->FUNC_CALL_PARAMS (113) 
CONTEXT_IDENTIFIER (111) ->ASIGN_USUAL (114) 
ASSIGN_ELEM_MATR (115) ->ACCESS_ELEM_MATR (116) = (117) INIT_ELEM_MATR (118) 
INIT_ELEM_MATR (119) ->literal (121) 
INIT_ELEM_MATR (120) ->identifier (122) ACCESS_ELEM_MATR (123) 
ACCESS_ELEM_MATR (124) ->[ (125) DIGIT (126) , (127) DIGIT (128) ] (129) 
DIGIT (130) ->identifier (132) 
DIGIT (131) ->literal (133) 
FUNC_CALL_PARAMS (134) ->( (135) PASSED_ARGS (136) ) (137) 
PASSED_ARGS (138) ->ARGUMENT (140) PAS_ARGS (141) 
PASSED_ARGS (139) ->eps (142) 
PAS_ARGS (143) ->, (145) ARGUMENT (146) PAS_ARGS (147) 
PAS_ARGS (144) ->eps (148) 
ARGUMENT (149) ->identifier (151) COMPOSITE_PART (152) 
ARGUMENT (150) ->literal (153) 
COMPOSITE_PART (154) ->ACCESS_MATR (157) 
COMPOSITE_PART (155) ->FUNC_CALL_PARAMS (158) 
COMPOSITE_PART (156) ->eps (159) 
ACCESS_MATR (160) ->[ (161) DIGIT (162) , (163) DIGIT (164) ] (165) 
ASIGN_USUAL (166) ->= (167) EXPRESSION (168) 
EXPRESSION (169) ->ARITHMETIC_EXPRESSION (172) 
EXPRESSION (170) ->DETERMINANT (173) 
EXPRESSION (171) ->TRANSPONATION (174) 
ARITHMETIC_EXPRESSION (175) ->PART_DIGIT_TERM (176) ADD_PART_DIGIT_TERM (177) 
PART_DIGIT_TERM (178) ->( (183) ARITHMETIC_EXPRESSION (184) ) (185) 
PART_DIGIT_TERM (179) ->identifier (186) AFTER_IDENTIFIER (187) 
PART_DIGIT_TERM (180) ->literal (188) 
PART_DIGIT_TERM (181) ->true (189) 
PART_DIGIT_TERM (182) ->false (190) 
AFTER_IDENTIFIER (191) ->ACCESS_MATR (194) 
AFTER_IDENTIFIER (192) ->FUNC_CALL_PARAMS (195) 
AFTER_IDENTIFIER (193) ->eps (196) 
ADD_PART_DIGIT_TERM (197) ->SIGN (199) PART_DIGIT_TERM (200) ADD_PART_DIGIT_TERM (201) 
ADD_PART_DIGIT_TERM (198) ->eps (202) 
SIGN (203) ->* (208) 
SIGN (204) ->/ (209) 
SIGN (205) ->+ (210) 
SIGN (206) ->- (211) 
SIGN (207) ->% (212) 
DETERMINANT (213) ->det (214) ( (215) INIT_MATR (216) ) (217) 
TRANSPONATION (218) ->transp (219) ( (220) INIT_MATR (221) ) (222) 
INIT_MATR (223) ->{ (225) ROW (226) NEXT_ROWS (227) } (228) 
INIT_MATR (224) ->identifier (229) 
ROW (230) ->{ (232) DIGIT (233) NEXT_DIGITS (234) } (235) 
ROW (231) ->eps (236) 
NEXT_DIGITS (237) ->, (239) DIGIT (240) NEXT_DIGITS (241) 
NEXT_DIGITS (238) ->eps (242) 
NEXT_ROWS (243) ->, (245) ROW (246) NEXT_ROWS (247) 
NEXT_ROWS (244) ->eps (248) 
IF (249) ->if (250) ( (251) LOGICAL_EXPRESSION (252) ) (253) { (254) CODE (255) } (256) ELSE (257) 
LOGICAL_EXPRESSION (258) ->LOGICAL_TERM (259) 
LOGICAL_TERM (260) ->PART_LOGTERM (261) ADD_PART_LOGTERM (262) 
PART_LOGTERM (263) ->ARITHMETIC_EXPRESSION (264) OP_COMPARE (265) 
ADD_PART_LOGTERM (266) ->LOG_COMPARE (268) PART_LOGTERM (269) ADD_PART_LOGTERM (270) 
ADD_PART_LOGTERM (267) ->eps (271) 
OP_COMPARE (272) ->COMPARE (273) ARITHMETIC_EXPRESSION (274) 
COMPARE (275) ->< (281) 
COMPARE (276) ->> (282) 
COMPARE (277) ->== (283) 
COMPARE (278) ->!= (284) 
COMPARE (279) -><= (285) 
COMPARE (280) ->>= (286) 
LOG_COMPARE (287) ->&& (289) 
LOG_COMPARE (288) ->|| (290) 
ELSE (291) ->else (293) { (294) CODE (295) } (296) 
ELSE (292) ->eps (297) 
FOR (298) ->for (299) ( (300) INIT_BLOCK (301) ; (302) CONDITION_BLOCK (303) ; (304) ITERATION_BLOCK (305) ) (306) { (307) CODE (308) } (309) 
INIT_BLOCK (310) ->identifier (312) ASIGN_USUAL (313) NEXT_ASIGN_USUAL (314) 
INIT_BLOCK (311) ->eps (315) 
NEXT_ASIGN_USUAL (316) ->, (318) identifier (319) ASIGN_USUAL (320) NEXT_ASIGN_USUAL (321) 
NEXT_ASIGN_USUAL (317) ->eps (322) 
CONDITION_BLOCK (323) ->LOGICAL_EXPRESSION (325) NEXT_LOGICAL_EXPRESSION (326) 
CONDITION_BLOCK (324) ->eps (327) 
NEXT_LOGICAL_EXPRESSION (328) ->, (330) LOGICAL_EXPRESSION (331) NEXT_LOGICAL_EXPRESSION (332) 
NEXT_LOGICAL_EXPRESSION (329) ->eps (333) 
ITERATION_BLOCK (334) ->identifier (336) ASIGN_USUAL (337) NEXT_ASIGN_BLOCK (338) 
ITERATION_BLOCK (335) ->eps (339) 
NEXT_ASIGN_BLOCK (340) ->, (342) ASIGN_USUAL (343) NEXT_ASIGN_BLOCK (344) 
NEXT_ASIGN_BLOCK (341) ->eps (345) 
OPERATION_ASIGN (346) ->matrix (348) ACCESS_MATR (349) identifier (350) = (351) INIT_MATR (352) 
OPERATION_ASIGN (347) ->SIMPLETYPE (353) identifier (354) = (355) EXPRESSION (356) 
RETURN_FROM_FUNC (357) ->VALUE (358) 
VALUE (359) ->EXPRESSION (360) 
