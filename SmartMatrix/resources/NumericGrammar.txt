PROGRAM (0) ->DECLARE_FUNC (1) FUNCTION (2) 
DECLARE_FUNC (3) ->SIMPLETYPE (5) identifier (6) ( (7) LISTPARAM (8) ) (9) ; (10) DECLARE_FUNC (11) 
DECLARE_FUNC (4) ->void (12) DECLARE_AFTER_VOID (13) 
DECLARE_AFTER_VOID (14) ->identifier (16) ( (17) LISTPARAM (18) ) (19) ; (20) DECLARE_FUNC (21) 
DECLARE_AFTER_VOID (15) ->MAIN (22) 
TYPE (23) ->SIMPLETYPE (25) 
TYPE (24) ->void (26) 
SIMPLETYPE (27) ->double (32) 
SIMPLETYPE (28) ->integer (33) 
SIMPLETYPE (29) ->string (34) 
SIMPLETYPE (30) ->bool (35) 
SIMPLETYPE (31) ->matrix (36) 
MAIN (37) ->main (38) ( (39) ) (40) { (41) CODE (42) } (43) 
FUNCTION (44) ->TYPE (45) identifier (46) ( (47) LISTPARAM (48) ) (49) { (50) CODE (51) } (52) FUNCTION (53) 
LISTPARAM (54) ->SIMPLETYPE (56) identifier (57) NEXT_PARAM (58) 
LISTPARAM (55) ->eps (59) 
NEXT_PARAM (60) ->, (62) SIMPLETYPE (63) identifier (64) NEXT_PARAM (65) 
NEXT_PARAM (61) ->eps (66) 
CODE (67) ->identifier (73) CONTEXT_IDENTIFIER (74) ; (75) CODE (76) 
CODE (68) ->IF (77) CODE (78) 
CODE (69) ->FOR (79) CODE (80) 
CODE (70) ->OPERATION_ASIGN (81) ; (82) CODE (83) 
CODE (71) ->return (84) VALUE (85) ; (86) CODE (87) 
CODE (72) ->eps (88) 
CONTEXT_IDENTIFIER (89) ->ASSIGN_ELEM_MATR (92) 
CONTEXT_IDENTIFIER (90) ->FUNC_CALL_PARAMS (93) 
CONTEXT_IDENTIFIER (91) ->ASIGN_USUAL (94) 
ASSIGN_ELEM_MATR (95) ->ACCESS_ELEM_MATR (96) = (97) INIT_ELEM_MATR (98) 
INIT_ELEM_MATR (99) ->literal (101) 
INIT_ELEM_MATR (100) ->identifier (102) ACCESS_ELEM_MATR (103) 
ACCESS_ELEM_MATR (104) ->[ (105) DIGIT (106) , (107) DIGIT (108) ] (109) 
DIGIT (110) ->identifier (112) 
DIGIT (111) ->literal (113) 
FUNC_CALL_PARAMS (114) ->( (115) PASSED_ARGS (116) ) (117) 
PASSED_ARGS (118) ->ARGUMENT (120) PAS_ARGS (121) 
PASSED_ARGS (119) ->eps (122) 
PAS_ARGS (123) ->, (125) ARGUMENT (126) PAS_ARGS (127) 
PAS_ARGS (124) ->eps (128) 
ARGUMENT (129) ->identifier (131) COMPOSITE_PART (132) 
ARGUMENT (130) ->literal (133) 
COMPOSITE_PART (134) ->ACCESS_MATR (137) 
COMPOSITE_PART (135) ->FUNC_CALL_PARAMS (138) 
COMPOSITE_PART (136) ->eps (139) 
ACCESS_MATR (140) ->[ (141) DIGIT (142) , (143) DIGIT (144) ] (145) 
ASIGN_USUAL (146) ->= (147) EXPRESSION (148) 
EXPRESSION (149) ->ARITHMETIC_EXPRESSION (152) 
EXPRESSION (150) ->DETERMINANT (153) 
EXPRESSION (151) ->TRANSPONATION (154) 
ARITHMETIC_EXPRESSION (155) ->PART_DIGIT_TERM (156) ADD_PART_DIGIT_TERM (157) 
PART_DIGIT_TERM (158) ->( (163) ARITHMETIC_EXPRESSION (164) ) (165) 
PART_DIGIT_TERM (159) ->identifier (166) AFTER_IDENTIFIER (167) 
PART_DIGIT_TERM (160) ->literal (168) 
PART_DIGIT_TERM (161) ->true (169) 
PART_DIGIT_TERM (162) ->false (170) 
AFTER_IDENTIFIER (171) ->ACCESS_MATR (174) 
AFTER_IDENTIFIER (172) ->FUNC_CALL_PARAMS (175) 
AFTER_IDENTIFIER (173) ->eps (176) 
ADD_PART_DIGIT_TERM (177) ->SIGN (179) PART_DIGIT_TERM (180) ADD_PART_DIGIT_TERM (181) 
ADD_PART_DIGIT_TERM (178) ->eps (182) 
SIGN (183) ->* (188) 
SIGN (184) ->/ (189) 
SIGN (185) ->+ (190) 
SIGN (186) ->- (191) 
SIGN (187) ->% (192) 
DETERMINANT (193) ->det (194) ( (195) INIT_MATR (196) ) (197) 
TRANSPONATION (198) ->transp (199) ( (200) INIT_MATR (201) ) (202) 
INIT_MATR (203) ->{ (205) ROW (206) NEXT_ROWS (207) } (208) 
INIT_MATR (204) ->identifier (209) 
ROW (210) ->{ (212) DIGIT (213) NEXT_DIGITS (214) } (215) 
ROW (211) ->eps (216) 
NEXT_DIGITS (217) ->, (219) DIGIT (220) NEXT_DIGITS (221) 
NEXT_DIGITS (218) ->eps (222) 
NEXT_ROWS (223) ->, (225) ROW (226) NEXT_ROWS (227) 
NEXT_ROWS (224) ->eps (228) 
IF (229) ->if (230) ( (231) LOGICAL_EXPRESSION (232) ) (233) { (234) CODE (235) } (236) ELSE (237) 
LOGICAL_EXPRESSION (238) ->LOGICAL_TERM (239) ADD_LOGTERM (240) 
LOGICAL_TERM (241) ->PART_LOGTERM (242) ADD_PART_LOGTERM (243) 
ADD_LOGTERM (244) ->|| (246) LOGICAL_TERM (247) ADD_LOGTERM (248) 
ADD_LOGTERM (245) ->eps (249) 
PART_LOGTERM (250) ->ARITHMETIC_EXPRESSION (253) OP_COMPARE (254) 
PART_LOGTERM (251) ->! (255) ARITHMETIC_EXPRESSION (256) 
PART_LOGTERM (252) ->( (257) LOGICAL_EXPRESSION (258) ) (259) 
ADD_PART_LOGTERM (260) ->&& (262) PART_LOGTERM (263) ADD_PART_LOGTERM (264) 
ADD_PART_LOGTERM (261) ->eps (265) 
OP_COMPARE (266) ->COMPARE (268) ARITHMETIC_EXPRESSION (269) 
OP_COMPARE (267) ->eps (270) 
COMPARE (271) ->< (277) 
COMPARE (272) ->> (278) 
COMPARE (273) ->== (279) 
COMPARE (274) ->!= (280) 
COMPARE (275) -><= (281) 
COMPARE (276) ->>= (282) 
ELSE (283) ->else (285) { (286) CODE (287) } (288) 
ELSE (284) ->eps (289) 
FOR (290) ->for (291) ( (292) INIT_BLOCK (293) ; (294) CONDITION_BLOCK (295) ; (296) ITERATION_BLOCK (297) ) (298) { (299) CODE (300) } (301) 
INIT_BLOCK (302) ->identifier (304) ASIGN_USUAL (305) NEXT_ASIGN_USUAL (306) 
INIT_BLOCK (303) ->eps (307) 
NEXT_ASIGN_USUAL (308) ->, (310) identifier (311) ASIGN_USUAL (312) NEXT_ASIGN_USUAL (313) 
NEXT_ASIGN_USUAL (309) ->eps (314) 
CONDITION_BLOCK (315) ->LOGICAL_EXPRESSION (317) NEXT_LOGICAL_EXPRESSION (318) 
CONDITION_BLOCK (316) ->eps (319) 
NEXT_LOGICAL_EXPRESSION (320) ->, (322) LOGICAL_EXPRESSION (323) NEXT_LOGICAL_EXPRESSION (324) 
NEXT_LOGICAL_EXPRESSION (321) ->eps (325) 
ITERATION_BLOCK (326) ->identifier (328) ASIGN_USUAL (329) NEXT_ASIGN_BLOCK (330) 
ITERATION_BLOCK (327) ->eps (331) 
NEXT_ASIGN_BLOCK (332) ->, (334) ASIGN_USUAL (335) NEXT_ASIGN_BLOCK (336) 
NEXT_ASIGN_BLOCK (333) ->eps (337) 
OPERATION_ASIGN (338) ->matrix (340) ACCESS_MATR (341) identifier (342) = (343) INIT_MATR (344) 
OPERATION_ASIGN (339) ->SIMPLETYPE (345) identifier (346) = (347) EXPRESSION (348) 
RETURN_FROM_FUNC (349) ->VALUE (350) 
VALUE (351) ->EXPRESSION (352) 
